{"ast":null,"code":"var _jsxFileName = \"/home/coder/react-validation-app/src/App.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport './App.css'; // Import the CSS for full-screen handling\n\nfunction App() {\n  const [isCameraOpen, setIsCameraOpen] = useState(false);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [cameraError, setCameraError] = useState('');\n  const webcamRef = useRef(null);\n\n  // Function to capture screenshot from webcam\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const image = webcamRef.current.getScreenshot();\n      if (image) {\n        setImageSrc(image); // Set the captured image\n      } else {\n        console.error(\"Failed to capture image\");\n      }\n    }\n  }, [webcamRef]);\n\n  // Handle Camera Errors\n  const handleUserMediaError = error => {\n    setCameraError(\"Error accessing the camera. Please allow camera permissions.\");\n    console.error(\"Camera error:\", error);\n  };\n\n  // Handle Successful Camera Access\n  const handleUserMedia = () => {\n    setCameraError(\"\"); // Reset error if camera works\n    console.log(\"Camera accessed successfully\");\n  };\n\n  // Function to reset and retake the picture\n  const retakePicture = () => {\n    setImageSrc(null);\n  };\n\n  // Close the camera and keep the image\n  const keepPicture = () => {\n    setIsCameraOpen(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `App ${isCameraOpen ? 'fullscreen' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Capture ID Card Image\"), !isCameraOpen && !imageSrc && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsCameraOpen(true),\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Start Camera\"), isCameraOpen && !imageSrc && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Webcam, {\n    audio: false,\n    ref: webcamRef,\n    screenshotFormat: \"image/jpeg\",\n    className: \"webcam-view\",\n    videoConstraints: {\n      facingMode: \"environment\" // Use rear camera if available\n    },\n    onUserMedia: handleUserMedia,\n    onUserMediaError: handleUserMediaError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: capture,\n    className: \"capture-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Take Picture\")), cameraError && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }\n  }, cameraError), imageSrc && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-preview-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Captured Image\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: imageSrc,\n    alt: \"Captured ID\",\n    className: \"captured-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: keepPicture,\n    className: \"keep-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Keep Picture\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: retakePicture,\n    className: \"retake-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Retake Picture\"))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useRef","useCallback","Webcam","App","isCameraOpen","setIsCameraOpen","imageSrc","setImageSrc","cameraError","setCameraError","webcamRef","capture","current","image","getScreenshot","console","error","handleUserMediaError","handleUserMedia","log","retakePicture","keepPicture","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginBottom","Fragment","audio","ref","screenshotFormat","videoConstraints","facingMode","onUserMedia","onUserMediaError","color","src","alt"],"sources":["/home/coder/react-validation-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport './App.css'; // Import the CSS for full-screen handling\n\nfunction App() {\n  const [isCameraOpen, setIsCameraOpen] = useState(false);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [cameraError, setCameraError] = useState('');\n  const webcamRef = useRef(null);\n\n  // Function to capture screenshot from webcam\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const image = webcamRef.current.getScreenshot();\n      if (image) {\n        setImageSrc(image); // Set the captured image\n      } else {\n        console.error(\"Failed to capture image\");\n      }\n    }\n  }, [webcamRef]);\n\n  // Handle Camera Errors\n  const handleUserMediaError = (error) => {\n    setCameraError(\"Error accessing the camera. Please allow camera permissions.\");\n    console.error(\"Camera error:\", error);\n  };\n\n  // Handle Successful Camera Access\n  const handleUserMedia = () => {\n    setCameraError(\"\"); // Reset error if camera works\n    console.log(\"Camera accessed successfully\");\n  };\n\n  // Function to reset and retake the picture\n  const retakePicture = () => {\n    setImageSrc(null);\n  };\n\n  // Close the camera and keep the image\n  const keepPicture = () => {\n    setIsCameraOpen(false);\n  };\n\n  return (\n    <div className={`App ${isCameraOpen ? 'fullscreen' : ''}`}>\n      <h2>Capture ID Card Image</h2>\n\n      {!isCameraOpen && !imageSrc && (\n        <button onClick={() => setIsCameraOpen(true)} style={{ marginBottom: '10px' }}>\n          Start Camera\n        </button>\n      )}\n\n      {/* Conditionally render the Webcam component based on isCameraOpen */}\n      {isCameraOpen && !imageSrc && (\n        <>\n          <Webcam\n            audio={false}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            className=\"webcam-view\"\n            videoConstraints={{\n              facingMode: \"environment\", // Use rear camera if available\n            }}\n            onUserMedia={handleUserMedia}\n            onUserMediaError={handleUserMediaError}\n          />\n\n          {/* Take Picture Button */}\n          <button onClick={capture} className=\"capture-button\">\n            Take Picture\n          </button>\n        </>\n      )}\n\n      {/* Display Camera Error */}\n      {cameraError && <p style={{ color: 'red' }}>{cameraError}</p>}\n\n      {/* Display the captured image with Keep and Retake options */}\n      {imageSrc && (\n        <div className=\"image-preview-container\">\n          <h3>Captured Image</h3>\n          <img src={imageSrc} alt=\"Captured ID\" className=\"captured-image\" />\n          <div className=\"button-group\">\n            <button onClick={keepPicture} className=\"keep-button\">\n              Keep Picture\n            </button>\n            <button onClick={retakePicture} className=\"retake-button\">\n              Retake Picture\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}