{"ast":null,"code":"var _jsxFileName = \"/home/coder/react-validation-app/src/App.js\";\nimport React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport Tesseract from 'tesseract.js';\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState('');\n  const [imageSrc, setImageSrc] = useState(null);\n  const [ocrResult, setOcrResult] = useState('');\n  const webcamRef = useRef(null);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const validateInput = () => {\n    const numbers = inputValue.split(',');\n    for (let number of numbers) {\n      number = number.trim();\n      if (number.length !== 11 || isNaN(number)) {\n        setError(`Invalid entry: \"${number}\". Each number must be 11 digits long.`);\n        return;\n      }\n    }\n    setError('');\n    console.log(\"Valid numbers: \", numbers);\n  };\n  const captureImage = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  };\n  const performOCR = () => {\n    if (!imageSrc) return;\n    Tesseract.recognize(imageSrc, 'eng',\n    // You may need to train Tesseract to recognize Turkish IDs specifically if necessary\n    {\n      logger: m => console.log(m) // Optional logging\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      console.log('OCR Result:', text);\n      extractTCKNumber(text);\n    });\n  };\n  const extractTCKNumber = text => {\n    const tckMatch = text.match(/\\b\\d{11}\\b/);\n    if (tckMatch) {\n      setOcrResult(`Extracted TCK number: ${tckMatch[0]}`);\n    } else {\n      setOcrResult('TCK number not found.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Enter Comma-Separated 11-Digit Numbers\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputValue,\n    onChange: handleInputChange,\n    placeholder: \"Enter numbers (comma separated)\",\n    style: {\n      width: '300px',\n      padding: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: validateInput,\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Validate\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Capture ID Card Image\"), /*#__PURE__*/React.createElement(Webcam, {\n    audio: false,\n    ref: webcamRef,\n    screenshotFormat: \"image/jpeg\",\n    width: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: captureImage,\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Capture Image\")), imageSrc && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Captured Image\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: imageSrc,\n    alt: \"Captured ID\",\n    width: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: performOCR,\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Extract TCK Number\")), ocrResult && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, ocrResult));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useRef","Webcam","Tesseract","App","inputValue","setInputValue","error","setError","imageSrc","setImageSrc","ocrResult","setOcrResult","webcamRef","handleInputChange","e","target","value","validateInput","numbers","split","number","trim","length","isNaN","console","log","captureImage","current","getScreenshot","performOCR","recognize","logger","m","then","data","text","extractTCKNumber","tckMatch","match","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","width","padding","onClick","marginLeft","color","marginTop","audio","ref","screenshotFormat","src","alt"],"sources":["/home/coder/react-validation-app/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport Tesseract from 'tesseract.js';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState('');\n  const [imageSrc, setImageSrc] = useState(null);\n  const [ocrResult, setOcrResult] = useState('');\n  \n  const webcamRef = useRef(null);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const validateInput = () => {\n    const numbers = inputValue.split(',');\n\n    for (let number of numbers) {\n      number = number.trim();\n      if (number.length !== 11 || isNaN(number)) {\n        setError(`Invalid entry: \"${number}\". Each number must be 11 digits long.`);\n        return;\n      }\n    }\n\n    setError('');\n    console.log(\"Valid numbers: \", numbers);\n  };\n\n  const captureImage = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  };\n\n  const performOCR = () => {\n    if (!imageSrc) return;\n\n    Tesseract.recognize(\n      imageSrc,\n      'eng', // You may need to train Tesseract to recognize Turkish IDs specifically if necessary\n      {\n        logger: (m) => console.log(m), // Optional logging\n      }\n    ).then(({ data: { text } }) => {\n      console.log('OCR Result:', text);\n      extractTCKNumber(text);\n    });\n  };\n\n  const extractTCKNumber = (text) => {\n    const tckMatch = text.match(/\\b\\d{11}\\b/);\n    if (tckMatch) {\n      setOcrResult(`Extracted TCK number: ${tckMatch[0]}`);\n    } else {\n      setOcrResult('TCK number not found.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Enter Comma-Separated 11-Digit Numbers</h2>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder=\"Enter numbers (comma separated)\"\n        style={{ width: '300px', padding: '5px' }}\n      />\n      <button onClick={validateInput} style={{ marginLeft: '10px' }}>\n        Validate\n      </button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      <div style={{ marginTop: '20px' }}>\n        <h3>Capture ID Card Image</h3>\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          width={300}\n        />\n        <button onClick={captureImage} style={{ marginTop: '10px' }}>\n          Capture Image\n        </button>\n      </div>\n\n      {imageSrc && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Captured Image</h3>\n          <img src={imageSrc} alt=\"Captured ID\" width={300} />\n          <button onClick={performOCR} style={{ marginTop: '10px' }}>\n            Extract TCK Number\n          </button>\n        </div>\n      )}\n\n      {ocrResult && <p style={{ color: 'green' }}>{ocrResult}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}