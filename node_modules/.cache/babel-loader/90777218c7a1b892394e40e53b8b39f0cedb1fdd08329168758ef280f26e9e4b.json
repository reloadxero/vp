{"ast":null,"code":"var _jsxFileName = \"/home/coder/react-validation-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState('');\n  const [imageSrc, setImageSrc] = useState(null);\n  const [ocrResult, setOcrResult] = useState('');\n  const webcamRef = useRef(null);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const validateInput = () => {\n    const numbers = inputValue.split(',');\n    for (let number of numbers) {\n      number = number.trim();\n      if (number.length !== 11 || isNaN(number)) {\n        setError(`Invalid entry: \"${number}\". Each number must be 11 digits long.`);\n        return;\n      }\n    }\n    setError('');\n    console.log(\"Valid numbers: \", numbers);\n  };\n  const captureImage = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  };\n  const performOCR = () => {\n    if (!imageSrc) return;\n    Tesseract.recognize(imageSrc, 'eng',\n    // You may need to train Tesseract to recognize Turkish IDs specifically if necessary\n    {\n      logger: m => console.log(m) // Optional logging\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      console.log('OCR Result:', text);\n      extractTCKNumber(text);\n    });\n  };\n  const extractTCKNumber = text => {\n    const tckMatch = text.match(/\\b\\d{11}\\b/);\n    if (tckMatch) {\n      setOcrResult(`Extracted TCK number: ${tckMatch[0]}`);\n    } else {\n      setOcrResult('TCK number not found.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Comma-Separated 11-Digit Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Enter numbers (comma separated)\",\n      style: {\n        width: '300px',\n        padding: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validateInput,\n      style: {\n        marginLeft: '10px'\n      },\n      children: \"Validate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capture ID Card Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureImage,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Capture Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Captured Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSrc,\n        alt: \"Captured ID\",\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: performOCR,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Extract TCK Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), ocrResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: ocrResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7WYKCPWl1MMgwA2lrM23KIAoLqQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Webcam","Tesseract","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","error","setError","imageSrc","setImageSrc","ocrResult","setOcrResult","webcamRef","handleInputChange","e","target","value","validateInput","numbers","split","number","trim","length","isNaN","console","log","captureImage","current","getScreenshot","performOCR","recognize","logger","m","then","data","text","extractTCKNumber","tckMatch","match","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","width","padding","onClick","marginLeft","color","marginTop","audio","ref","screenshotFormat","src","alt","_c","$RefreshReg$"],"sources":["/home/coder/react-validation-app/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport Tesseract from 'tesseract.js';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState('');\n  const [imageSrc, setImageSrc] = useState(null);\n  const [ocrResult, setOcrResult] = useState('');\n  \n  const webcamRef = useRef(null);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const validateInput = () => {\n    const numbers = inputValue.split(',');\n\n    for (let number of numbers) {\n      number = number.trim();\n      if (number.length !== 11 || isNaN(number)) {\n        setError(`Invalid entry: \"${number}\". Each number must be 11 digits long.`);\n        return;\n      }\n    }\n\n    setError('');\n    console.log(\"Valid numbers: \", numbers);\n  };\n\n  const captureImage = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  };\n\n  const performOCR = () => {\n    if (!imageSrc) return;\n\n    Tesseract.recognize(\n      imageSrc,\n      'eng', // You may need to train Tesseract to recognize Turkish IDs specifically if necessary\n      {\n        logger: (m) => console.log(m), // Optional logging\n      }\n    ).then(({ data: { text } }) => {\n      console.log('OCR Result:', text);\n      extractTCKNumber(text);\n    });\n  };\n\n  const extractTCKNumber = (text) => {\n    const tckMatch = text.match(/\\b\\d{11}\\b/);\n    if (tckMatch) {\n      setOcrResult(`Extracted TCK number: ${tckMatch[0]}`);\n    } else {\n      setOcrResult('TCK number not found.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Enter Comma-Separated 11-Digit Numbers</h2>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder=\"Enter numbers (comma separated)\"\n        style={{ width: '300px', padding: '5px' }}\n      />\n      <button onClick={validateInput} style={{ marginLeft: '10px' }}>\n        Validate\n      </button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      <div style={{ marginTop: '20px' }}>\n        <h3>Capture ID Card Image</h3>\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          width={300}\n        />\n        <button onClick={captureImage} style={{ marginTop: '10px' }}>\n          Capture Image\n        </button>\n      </div>\n\n      {imageSrc && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Captured Image</h3>\n          <img src={imageSrc} alt=\"Captured ID\" width={300} />\n          <button onClick={performOCR} style={{ marginTop: '10px' }}>\n            Extract TCK Number\n          </button>\n        </div>\n      )}\n\n      {ocrResult && <p style={{ color: 'green' }}>{ocrResult}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}