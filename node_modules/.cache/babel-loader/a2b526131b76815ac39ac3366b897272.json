{"ast":null,"code":"var _jsxFileName = \"/home/coder/react-validation-app/src/App.js\";\nimport React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nfunction App() {\n  const webcamRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n\n  // Capture the screenshot from the webcam when the shutter button is clicked\n  const capture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Capture ID Card Image\"), /*#__PURE__*/React.createElement(Webcam, {\n    audio: false // No audio needed\n    ,\n    ref: webcamRef // Access the webcam\n    ,\n    screenshotFormat: \"image/jpeg\" // Format of the image captured\n    ,\n    width: 350 // You can adjust this size for your layout\n    ,\n    videoConstraints: {\n      facingMode: \"environment\" // Use rear camera if available (for mobile devices)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: capture,\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Shutter\"), imageSrc && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Captured Image\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: imageSrc,\n    alt: \"Captured ID\",\n    width: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useRef","Webcam","App","webcamRef","imageSrc","setImageSrc","capture","current","getScreenshot","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","width","videoConstraints","facingMode","onClick","style","marginTop","src","alt"],"sources":["/home/coder/react-validation-app/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n\n  // Capture the screenshot from the webcam when the shutter button is clicked\n  const capture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Capture ID Card Image</h2>\n      \n      {/* Webcam Component */}\n      <Webcam\n        audio={false} // No audio needed\n        ref={webcamRef} // Access the webcam\n        screenshotFormat=\"image/jpeg\" // Format of the image captured\n        width={350} // You can adjust this size for your layout\n        videoConstraints={{\n          facingMode: \"environment\" // Use rear camera if available (for mobile devices)\n        }}\n      />\n\n      {/* Shutter Button */}\n      <button onClick={capture} style={{ marginTop: '10px' }}>\n        Shutter\n      </button>\n\n      {/* Display the captured image */}\n      {imageSrc && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Captured Image</h3>\n          <img src={imageSrc} alt=\"Captured ID\" width={350} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,cAAc;AAEjC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,SAAS,GAAGH,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMO,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMF,QAAQ,GAAGD,SAAS,CAACI,OAAO,CAACC,aAAa,CAAC,CAAC;IAClDH,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAED,oBACEN,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBlB,KAAA,CAAAW,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,eAG9BlB,KAAA,CAAAW,aAAA,CAACR,MAAM;IACLgB,KAAK,EAAE,KAAM,CAAC;IAAA;IACdC,GAAG,EAAEf,SAAU,CAAC;IAAA;IAChBgB,gBAAgB,EAAC,YAAY,CAAC;IAAA;IAC9BC,KAAK,EAAE,GAAI,CAAC;IAAA;IACZC,gBAAgB,EAAE;MAChBC,UAAU,EAAE,aAAa,CAAC;IAC5B,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eAGFlB,KAAA,CAAAW,aAAA;IAAQc,OAAO,EAAEjB,OAAQ;IAACkB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAEhD,CAAC,EAGRZ,QAAQ,iBACPN,KAAA,CAAAW,aAAA;IAAKe,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChClB,KAAA,CAAAW,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gBAAkB,CAAC,eACvBlB,KAAA,CAAAW,aAAA;IAAKiB,GAAG,EAAEtB,QAAS;IAACuB,GAAG,EAAC,aAAa;IAACP,KAAK,EAAE,GAAI;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChD,CAEJ,CAAC;AAEV;AAEA,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}