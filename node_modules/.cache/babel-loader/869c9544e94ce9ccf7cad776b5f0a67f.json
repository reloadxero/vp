{"ast":null,"code":"var _jsxFileName = \"/home/coder/react-validation-app/src/App.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nfunction App() {\n  const webcamRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [cameraError, setCameraError] = useState('');\n\n  // Function to capture screenshot from webcam\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const image = webcamRef.current.getScreenshot();\n      if (image) {\n        setImageSrc(image);\n        console.log(\"Image captured:\", image); // Log the captured image\n      } else {\n        console.error(\"Failed to capture image\"); // Log if capturing failed\n      }\n    }\n  }, [webcamRef]);\n  const handleUserMediaError = error => {\n    setCameraError(\"Error accessing the camera. Please allow camera permissions.\");\n    console.error(\"Camera error:\", error);\n  };\n  const handleUserMedia = () => {\n    setCameraError(\"\"); // Reset error if camera works\n    console.log(\"Camera accessed successfully\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Capture ID Card Image\"), /*#__PURE__*/React.createElement(Webcam, {\n    audio: false,\n    ref: webcamRef,\n    screenshotFormat: \"image/jpeg\",\n    width: 350,\n    videoConstraints: {\n      facingMode: \"environment\" // Use rear camera if available\n    },\n    onUserMedia: handleUserMedia,\n    onUserMediaError: handleUserMediaError // Handle errors accessing the webcam\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: capture,\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Shutter\"), cameraError && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }\n  }, cameraError), imageSrc && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Captured Image\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: imageSrc,\n    alt: \"Captured ID\",\n    width: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useRef","useCallback","Webcam","App","webcamRef","imageSrc","setImageSrc","cameraError","setCameraError","capture","current","image","getScreenshot","console","log","error","handleUserMediaError","handleUserMedia","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","width","videoConstraints","facingMode","onUserMedia","onUserMediaError","onClick","style","marginTop","color","src","alt"],"sources":["/home/coder/react-validation-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [cameraError, setCameraError] = useState('');\n\n  // Function to capture screenshot from webcam\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const image = webcamRef.current.getScreenshot();\n      if (image) {\n        setImageSrc(image);\n        console.log(\"Image captured:\", image); // Log the captured image\n      } else {\n        console.error(\"Failed to capture image\"); // Log if capturing failed\n      }\n    }\n  }, [webcamRef]);\n\n  const handleUserMediaError = (error) => {\n    setCameraError(\"Error accessing the camera. Please allow camera permissions.\");\n    console.error(\"Camera error:\", error);\n  };\n\n  const handleUserMedia = () => {\n    setCameraError(\"\"); // Reset error if camera works\n    console.log(\"Camera accessed successfully\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Capture ID Card Image</h2>\n\n      {/* Webcam Component */}\n      <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={350}\n        videoConstraints={{\n          facingMode: \"environment\", // Use rear camera if available\n        }}\n        onUserMedia={handleUserMedia}\n        onUserMediaError={handleUserMediaError} // Handle errors accessing the webcam\n      />\n\n      {/* Shutter Button */}\n      <button onClick={capture} style={{ marginTop: '10px' }}>\n        Shutter\n      </button>\n\n      {/* Display Camera Error */}\n      {cameraError && <p style={{ color: 'red' }}>{cameraError}</p>}\n\n      {/* Display the captured image */}\n      {imageSrc && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Captured Image</h3>\n          <img src={imageSrc} alt=\"Captured ID\" width={350} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}